
# Jupyter Install
https://sahilramani.com/2020/10/how-to-setup-python3-and-jupyter-notebook-on-jetson-nano/
cd ~
wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh .
chmod a+x Miniforge3-Linux-aarch64.sh

./Miniforge3-Linux-aarch64.sh

conda config --set auto_activate_base false
sudo apt install python3-h5py libhdf5-serial-dev hdf5-tools python3-matplotlib
conda create -n jupyter python=3.6

conda activate jupyter
pip install matplotlib pandas numpy pillow scipy tqdm scikit-image scikit-learn seaborn cython h5py jupyter ipywidgets
pip install 'pillow<7'
python -m ipykernel install --user



log out & log in


## Conda Jupyter Setup Retry


cd ~/Downloads
wget https://nvidia.box.com/shared/static/p57jwntv436lfrd78inwl7iml6p13fzh.whl \
    -O torch-1.8.0-cp36-cp36m-linux_aarch64.whl
sudo apt-get install python3-pip libopenblas-base libopenmpi-dev -y
pip install Cython
pip install numpy torch-1.8.0-cp36-cp36m-linux_aarch64.whl

sudo apt-get install libjpeg-dev zlib1g-dev libpython3-dev libavcodec-dev libavformat-dev libswscale-dev -y

git clone --branch v0.9.0 https://github.com/pytorch/vision torchvision

cd torchvision
export BUILD_VERSION=0.9.0
python3 setup.py install --user
cd ../  # attempting to load torchvision from build dir will result in import error

# Install torch2trt
cd ~/Downloads
sudo pip3 install pillow
git clone -b jp4.6_tensorrt8 https://github.com/chitoku/torch2trt.git
cd torch2trt

sudo python3 setup.py install --plugins

# Install trt_pose
git clone https://github.com/NVIDIA-AI-IOT/trt_pose
cd trt_pose
sudo python3 setup.py install
Yes! => Finished processing dependencies for trt-pose==0.0.1

# Install JetCam
git clone https://github.com/NVIDIA-AI-IOT/jetcam
cd jetcam
sudo python3 setup.py install

cd tasks/human_pose/
wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=1XYDdCUdiF2xxx4rznmLb62SdOUZuoNbd' \
    -O resnet18_baseline_att_224x224_A_epoch_249.pth
wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=13FkJkx7evQ1WwP54UmdiDXWyFMY1OxDU' \
    -O densenet121_baseline_att_256x256_B

jupyter notebook

# Docker trt pose
cd ~/Downloads
git clone https://github.com/NVIDIA-AI-IOT/ros2_trt_pose.git
cd ros2_trt_pose/
cd docker/
sudo gedit /etc/docker/daemon.json
{
    "runtimes": {
        "nvidia": {
            "path": "nvidia-container-runtime",
            "runtimeArgs": []
        }
    },

    "default-runtime": "nvidia"
}
cp /etc/apt/trusted.gpg.d/jetson-ota-public.asc .
sh docker_build.sh




